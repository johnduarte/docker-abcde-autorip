# -----------------$HOME/.abcde.conf----------------- #
#
# A sample configuration file to convert music cds to
#  MP3 format using lame, eyeD3 and abcde version 2.7.2
#
#   http://andrews-corner.org/linux/abcde/index.html
# -------------------------------------------------- #

# Encode tracks immediately after reading. Saves disk space, gives
# better reading of 'scratchy' disks and better troubleshooting of
# encoding process but slows the operation of abcde quite a bit:
LOWDISK=n

# Specify the method to use to retrieve the track information,
# the alternative is to specify 'musicbrainz':
CDDBMETHOD=musicbrainz

# Make a local cache of cddb entries and then volunteer to use
# these entries when and if they match the cd:
CDDBCOPYLOCAL="y"
CDDBLOCALDIR="$HOME/.cddb"
CDDBLOCALRECURSIVE="y"
CDDBUSELOCAL="y"

# Specify the encoder to use for MP3. In this case 'lame':
MP3ENCODERSYNTAX=lame

# Specify the path to the selected encoder. In most cases the encoder
# should be in your $PATH as I illustrate below, otherwise you will
# need to specify the full path. For example: /usr/bin/lame
LAME=lame

# Specify your required encoding options here. Multiple options can
# be selected as '--preset standard --another-option' etc.
# The '-V 2' option gives VBR encoding between 170-210 kbits/s.
LAMEOPTS='-V 2'

# Output type for MP3.
OUTPUTTYPE="mp3"

# The cd ripping program to use. There are a few choices here: cdda2wav,
# dagrab, cddafs (Mac OS X only) and flac. New to abcde 2.7 is 'libcdio'.
CDROMREADERSYNTAX=cdparanoia

# Give the location of the ripping program and pass any extra options,
# if using libcdio set 'CD_PARANOIA=cd-paranoia'.
CDPARANOIA=cdparanoia
CDPARANOIAOPTS="--never-skip=40"

# Give the location of the CD identification program:
CDDISCID=cd-discid

# Give the base location here for the encoded music files.
OUTPUTDIR="/srv"

# The default actions that abcde will take.
ACTIONS=cddb,getalbumart,read,encode,tag,move,clean

# Decide here how you want the tracks labelled for a standard 'single-artist',
# multi-track encode and also for a multi-track, 'various-artist' encode:
OUTPUTFORMAT='${OUTPUT}/${ARTISTFILE}/${ALBUMFILE}/${TRACKNUM}.${TRACKFILE}'
VAOUTPUTFORMAT='${OUTPUT}/Various/${ALBUMFILE}/${TRACKNUM}.${ARTISTFILE}-${TRACKFILE}'

# Decide here how you want the tracks labelled for a standard 'single-artist',
# single-track encode and also for a single-track 'various-artist' encode.
# (Create a single-track encode with 'abcde -1' from the commandline.)
ONETRACKOUTPUTFORMAT='${OUTPUT}/${ARTISTFILE}/${ALBUMFILE}/${ALBUMFILE}'
VAONETRACKOUTPUTFORMAT='${OUTPUT}/Various/${ALBUMFILE}/${ALBUMFILE}'

# Create playlists for single and various-artist encodes. I would suggest
# commenting these out for single-track encoding.
PLAYLISTFORMAT='${OUTPUT}/${ARTISTFILE}/${ALBUMFILE}/${ALBUMFILE}.m3u'
VAPLAYLISTFORMAT='${OUTPUT}/Various/${ALBUMFILE}/${ALBUMFILE}.m3u'

# This function takes out dots preceding the album name, and removes a grab
# bag of illegal characters. It allows spaces, if you do not wish spaces add
# in -e 's/ /_/g' after the first sed command.
mungefilename ()
{
  echo "$@" | sed -e 's/^\.*//' | tr -d ":><|*/\"'?[:cntrl:]"
}

# What extra options?
MAXPROCS=4                              # Run a few encoders simultaneously
PADTRACKS=y                             # Makes tracks 01 02 not 1 2
EXTRAVERBOSE=0                          # Useful for debugging
COMMENT='abcde version 2.7.2'           # Place a comment...
EJECTCD=y                               # Please eject cd when finished :-)

#--------------------------------------------------------------------------#
#  A post_encode function to embed album art downloaded with abcde 2.7     #
#  and greater using the new getalbumart function. This version of the     #
#  post_encode function will embed with multiple formats at the same time: #
#                                                                          #
#      * mp3 : eyeD3 will be required                                      #
#      * flac: metaflac will be required                                   #
#      * m4a : AtomicParsley will be required                              #
#                                                                          #
#  To use this function copy this entire code block and paste it into      # 
#  your ~/.abcde.conf file.                                                #
#                                                                          # 
#                abcde: Downloading Album Art...                           #
#    http://www.andrews-corner.org/linux/abcde/getalbumart.html            #
#--------------------------------------------------------------------------#
post_encode ()
{
    ARTISTFILE="$(mungefilename "$TRACKARTIST")"
    ALBUMFILE="$(mungefilename "$DALBUM")"
    YEAR=${CDYEAR:-$CDYEAR}

    #------ Find multiple output formats -----#
    for OUTPUT in $(echo $OUTPUTTYPE | tr , \ )
    do

        #-------- Find the output directory ------#
        if [ "$VARIOUSARTISTS" = "y" ] ; then
            FINDPATH="$(eval echo "$VAOUTPUTFORMAT")"
        else
            FINDPATH="$(eval echo "$OUTPUTFORMAT")"
        fi

        FINALDIR="$(dirname "$OUTPUTDIR/$FINDPATH")"
        cd "$FINALDIR"

        #----- Instructions for each format ------#
        if [ -e "cover.jpg" ] ; then
            case  "$OUTPUT" in
                mp3)
                    for i in *.mp3
                    do
                        eyeD3 --add-image cover.jpg:FRONT_COVER "$i"
                    done
                    ;;
                flac)
                    for i in *.flac
                    do 
                        metaflac --import-picture-from=cover.jpg "$i"
                    done
                    ;;
                m4a)
                    for i in *.m4a
                    do
                        AtomicParsley "$i" --artwork cover.jpg --overWrite 
                    done
                    ;;
                *)
                    vecho "Sorry, no matching output formats here..." >&2
                    return 1
            esac
        else
            vecho "Cover image not found..." >&2
            return 1
        fi

        vecho "Your "$OUTPUT" files have had the album art embedded..." >&2

    #------ Complete the initial loop -----#
    done
}